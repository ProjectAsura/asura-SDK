//-------------------------------------------------------------------------------------------------
// File : a3dx_restexture.h
// Desc : Texture Resource.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <a3d.h>


namespace a3d {

///////////////////////////////////////////////////////////////////////////////
// ResSurface structure.
///////////////////////////////////////////////////////////////////////////////
struct ResSurface
{
    uint32_t        MipIndex;       // ミップレベルです.
    uint32_t        RowPitch;       // 1行あたりのバイト数です.
    uint32_t        SlicePitch;     // 1スライスあたりのバイト数です.
    uint8_t*        Pixels;         // ピクセルデータです.
};

///////////////////////////////////////////////////////////////////////////////
// ResTexture class
///////////////////////////////////////////////////////////////////////////////
class ResTexture
{
    //=========================================================================
    // list of friend classes and methods.
    //=========================================================================
    /* NOTHING */

public:
    //=========================================================================
    // public variables.
    //=========================================================================
    RESOURCE_DIMENSION  Dimension;              //!< 次元です.
    uint32_t            Width;                  //!< 横幅です.
    uint32_t            Height;                 //!< 縦幅です.
    uint32_t            DepthOrArraySize;       //!< 深度または配列サイズです.
    uint32_t            MipLevels;              //!< ミップレベルです.
    RESOURCE_FORMAT     Format;                 //!< リソースフォーマットです.
    uint32_t            SurfaceCount;           //!< サーフェイス数です.
    ResSurface*         Surfaces;               //!< リソースサーフェイスです.

    //=========================================================================
    // public methods.
    //=========================================================================

    //-------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //-------------------------------------------------------------------------
    ResTexture();

    //-------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //-------------------------------------------------------------------------
    ~ResTexture();

    //-------------------------------------------------------------------------
    //! @brief      読み込み処理を行います.
    //!
    //! @param[in]      pAllocator          メモリアロケータ.
    //! @param[in]      path                ファイルパスです.
    //! @retval true    読み込みに成功.
    //! @retval false   読み込みに失敗.
    //-------------------------------------------------------------------------
    bool Load(IAllocator* pAllocator, const char* path);

    //-------------------------------------------------------------------------
    //! @brief      書き込み処理を行います.
    //!
    //! @param[in]      path        ファイルパスです.
    //! @retval true    書き込みに成功.
    //! @retval false   書き込みに失敗.
    //-------------------------------------------------------------------------
    bool Save(const char* path);

    //-------------------------------------------------------------------------
    //! @brief      破棄処理を行います.
    //-------------------------------------------------------------------------
    void Dispose();

private:
    //=========================================================================
    // private variables.
    //=========================================================================
    IAllocator*         m_pAllocator = nullptr;

    //=========================================================================
    // private methods.
    //=========================================================================
    ResTexture              (const ResTexture&) = delete;
    ResTexture& operator =  (const ResTexture&) = delete;
};


} // namespace a3d
