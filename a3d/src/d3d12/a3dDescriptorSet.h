//-------------------------------------------------------------------------------------------------
// File : a3dDescriptorSet.h
// Desc : DescriptorSet Implementation.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once


namespace a3d {

///////////////////////////////////////////////////////////////////////////////////////////////////
// DescriptorSet class
///////////////////////////////////////////////////////////////////////////////////////////////////
class A3D_API DescriptorSet : IDescriptorSet
{
    //=============================================================================================
    // list of friend classes and mehtods.
    //=============================================================================================
    /* NOTHING */

public:
    //=============================================================================================
    // public variables.
    //=============================================================================================
    /* NOTHING */

    //=============================================================================================
    // public methods.
    //=============================================================================================

    //---------------------------------------------------------------------------------------------
    //! @brief      生成処理を行います.
    //!
    //! @param[in]      pDevice             デバイスです.
    //! @param[in]      pDesc               ディスクリプタセットレイアウトです.
    //! @param[in]      ppDescriptors       ディスクリプタの配列です.
    //! @param[in]      isGraphicsPipeline  グラフィックスパイプラインかどうか?
    //! @param[out]     ppDescriptorSet     ディスクリプタセットの格納先です.
    //! @retval true    生成に成功.
    //! @retval false   生成に失敗.
    //---------------------------------------------------------------------------------------------
    static bool A3D_APIENTRY Create(
        IDevice*                    pDevice,
        DescriptorSetLayoutDesc*    pDesc,
        Descriptor**                ppDescriptors,
        bool                        isGraphicsPipeline,
        IDescriptorSet**            ppDescriptorSet);

    //---------------------------------------------------------------------------------------------
    //! @brief      参照カウントを増やします.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY AddRef() override;

    //---------------------------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY Release() override;

    //---------------------------------------------------------------------------------------------
    //! @brief      参照カウントを取得します.
    //!
    //! @return     参照カウントを返却します.
    //---------------------------------------------------------------------------------------------
    uint32_t A3D_APIENTRY GetCount() const override;

    //---------------------------------------------------------------------------------------------
    //! @brief      デバイスを取得します.
    //!
    //! @param[out]     ppDevice        デバイスの格納先です.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY GetDevice(IDevice** ppDevice) override;

    //---------------------------------------------------------------------------------------------
    //! @brief      テクスチャを設定します.
    //!
    //! @param[in]      index       レイアウト番号です.
    //! @param[in]      pResource   設定するリソースです.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY SetTexture(uint32_t index, ITexture* pResource) override;

    //---------------------------------------------------------------------------------------------
    //! @brief      バッファを設定します.
    //!
    //! @param[in]      index       レイアウト番号です.
    //! @param[in]      pResource   設定するリソースです.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY SetBuffer(uint32_t index, IBuffer* pResource) override;

    //---------------------------------------------------------------------------------------------
    //! @brief      バッファを設定します.
    //!
    //! @param[in]      index       レイアウト番号です.
    //! @param[in]      pResource   設定するリソースです.
    //! @param[in]      size        設定するサイズです.
    //! @param[in]      offset      設定するオフセットです.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY SetBuffer(
        uint32_t    index,
        IBuffer*    pResource,
        uint64_t    size,
        uint64_t    offset) override;

    //---------------------------------------------------------------------------------------------
    //! @brief      サンプラーを設定します.
    //!
    //! @param[in]      index       レイアウト番号です.
    //! @param[in]      pSampler    設定するサンプラーです.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY SetSampler(uint32_t index, ISampler* pSampler) override;

    //---------------------------------------------------------------------------------------------
    //! @brief      ディスクリプタセットを更新します.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY Update();

    //---------------------------------------------------------------------------------------------
    //! @brief      ディスクリプタテーブルを設定する描画コマンドを発行します.
    //!
    //! @param[in]      pCommandList        コマンドリストです.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY Bind(ICommandList* pCommandList);

private:
    ///////////////////////////////////////////////////////////////////////////////////////////////
    // DescriptorInfo structure
    ///////////////////////////////////////////////////////////////////////////////////////////////
    struct DescriptorInfo
    {
        uint64_t    Size;       //!< バッファサイズです.
        uint64_t    Offset;     //!< ディスクリプタオセットです.
        IResource*  pResource;  //!< リソースです.
        ISampler*   pSampler;   //!< サンプラーです.
    };

    //=============================================================================================
    // private variables.
    //=============================================================================================
    std::atomic<uint32_t>       m_RefCount;                         //!< 参照カウントです.
    IDevice*                    m_pDevice;                          //!< デバイスです.
    DescriptorSetLayoutDesc*    m_pLayoutDesc;                      //!< レイアウト設定です.
    Descriptor**                m_pDescriptors;                     //!< ディスクリプタです.
    DescriptorInfo*             m_pDescriptorInfos;                 //!< ディスクリプタ情報です.
    bool                        m_IsGraphicsPipeline;               //!< グラフィックスパイプラインかどうか?

    //---------------------------------------------------------------------------------------------
    //! @brief      コンストラクタです.
    //---------------------------------------------------------------------------------------------
    A3D_APIENTRY DescriptorSet();

    //---------------------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------------------------
    A3D_APIENTRY ~DescriptorSet();

    //---------------------------------------------------------------------------------------------
    //! @brief      初期化処理を行います.
    //!
    //! @param[in]      pDevice     デバイスです.
    //! @parma[in]      pDesc       構成設定です.
    //! @retval true    初期化に成功.
    //! @retval false   初期化に失敗.
    //---------------------------------------------------------------------------------------------
    bool A3D_APIENTRY Init(
        IDevice*                    pDevice,
        DescriptorSetLayoutDesc*    pDesc,
        Descriptor**                ppDescriptors,
        bool                        isGraphicsPipeline);

    //---------------------------------------------------------------------------------------------
    //! @brief      終了処理を行います.
    //---------------------------------------------------------------------------------------------
    void A3D_APIENTRY Term();

    //---------------------------------------------------------------------------------------------
    //! @brief      ディスクリプタ情報をリセットします.
    //!
    //! @param[in]      info        リセットするディスクリプタ情報です.
    //---------------------------------------------------------------------------------------------
    void ResetDescriptorInfo(DescriptorInfo& info);

    DescriptorSet   (const DescriptorSet&) = delete;
    void operator = (const DescriptorSet&) = delete;
};

} // namespace a3d
