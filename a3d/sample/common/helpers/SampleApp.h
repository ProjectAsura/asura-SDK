//-------------------------------------------------------------------------------------------------
// File : SampleApp.h
// Desc : Sample Application.
// Copyright(c) Project Asura. All right reserved.
//-------------------------------------------------------------------------------------------------
#pragma once

//-------------------------------------------------------------------------------------------------
// Includes
//-------------------------------------------------------------------------------------------------
#include <cstdint>


//-------------------------------------------------------------------------------------------------
// Type definition.
//-------------------------------------------------------------------------------------------------
typedef void (*MouseCallback)(int x, int y, int wheelDelta, bool leftDown, bool middleDown, bool rightDown, void* pUser);
typedef void (*KeyboardCallback)(bool keyDown, bool altDown, uint32_t keyCode, void* pUser);
typedef void (*CharCallback)(uint32_t keyCode, void* pUser);


///////////////////////////////////////////////////////////////////////////////////////////////////
// IApp interface
///////////////////////////////////////////////////////////////////////////////////////////////////
struct IApp
{
    //---------------------------------------------------------------------------------------------
    //! @brief      デストラクタです.
    //---------------------------------------------------------------------------------------------
    virtual ~IApp()
    { /* DO_NOTHING */ }

    //---------------------------------------------------------------------------------------------
    //! @brief      解放処理を行います.
    //---------------------------------------------------------------------------------------------
    virtual void Release() = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      メインループを続行するかどうか.
    //!
    //! @retval true    メインループを続行します.
    //! @retval false   メインループを終了します.
    //---------------------------------------------------------------------------------------------
    virtual bool IsLoop() = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      終了要求を出します.
    //---------------------------------------------------------------------------------------------
    virtual void PostQuit() = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      ウィンドウの横幅を取得します.
    //!
    //! @return     ウィンドウの横幅を返却します.
    //---------------------------------------------------------------------------------------------
    virtual uint32_t GetWidth() const = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      ウィンドウの縦幅を取得します.
    //!
    //! @return     ウィンドウの縦幅を返却します.
    //---------------------------------------------------------------------------------------------
    virtual uint32_t GetHeight() const = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      インスタンスハンドルを取得します.
    //!
    //! @return     インスタンスハンドルを返却します.
    //---------------------------------------------------------------------------------------------
    virtual void* GetInstanceHandle() const = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      ウィンドウハンドルを取得します.
    //!
    //! @return     ウィンドウハンドルを返却します.
    //---------------------------------------------------------------------------------------------
    virtual void* GetWindowHandle() const = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      マウスコールバック関数を設定します.
    //!
    //! @param[in]      pFunc       設定するコールバック関数です.
    //! @param[in]      pUser       ユーザーポインタです.
    //---------------------------------------------------------------------------------------------
    virtual void SetMouseCallback(MouseCallback pFunc, void* pUser) = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      キーボードコールバック関数を設定します.
    //!
    //! @param[in]      pFunc       設定するコールバック関数です.
    //! @param[in]      pUser       ユーザーポインタです.
    //---------------------------------------------------------------------------------------------
    virtual void SetKeyboardCallback(KeyboardCallback pFunc, void* pUser) = 0;

    //---------------------------------------------------------------------------------------------
    //! @brief      文字入力コールバック関数を設定します.
    //!
    //! @param[in]      pFunc       設定するコールバック関数です.
    //! @param[in]      pUser       ユーザーポインタです.
    //---------------------------------------------------------------------------------------------
    virtual void SetCharCallback(CharCallback pFunc, void* pUser) = 0;
};

//-------------------------------------------------------------------------------------------------
//! @brief      アプリケーションを生成します.
//!
//! @param[in]      width       ウィンドウの横幅です.
//! @param[in]      height      ウィンドウの縦幅です.
//! @param[out]     ppApp       アプリケーションの格納先です.
//! @retval true    生成に成功.
//! @retval false   生成に失敗.
//-------------------------------------------------------------------------------------------------
bool CreateApp(uint32_t width, uint32_t height, IApp** ppApp);
